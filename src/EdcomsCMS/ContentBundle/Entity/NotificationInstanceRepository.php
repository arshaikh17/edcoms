<?php

namespace EdcomsCMS\ContentBundle\Entity;

/**
 * NotificationInstanceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationInstanceRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * Find all read notifications for a user
     *
     * @param $user
     * @return array
     * @throws Exception
     */
    public function findRead($user, $offset = null, $limit = null)
    {
        $instances = $this->getEntityManager('edcoms_cms')
            ->createQuery("SELECT i "
                . "FROM EdcomsCMSContentBundle:NotificationInstance i "
                . "WHERE i.user = :user "
                . "AND i.dateSeen IS NOT NULL "
                . "ORDER BY i.dateIssued DESC")
            ->setParameter('user', $user);

        //add offset if requested
        if (!is_null($offset)) {
            $instances->setFirstResult($offset);
        }
        //add limit if requested
        if (!is_null($limit)) {
            $instances->setMaxResults($limit);
        }

        //query DB
        $instances = $instances->getResult();

        if (null === $instances) {
            $message = sprintf(
                'Unable to find any notifications for User %d',
                $user->getId()
            );
            throw new Exception($message);
        }
        return $instances;
    }

    /**
     * Find all unread notifications for a user
     *
     * @param $user
     * @return array
     * @throws Exception
     */
    public function findUnread($user, $offset = null, $limit = null)
    {
        $instances = $this->getEntityManager('edcoms_cms')
            ->createQuery("SELECT i "
                . "FROM EdcomsCMSContentBundle:NotificationInstance i "
                . "WHERE i.user = :user "
                . "AND i.dateSeen IS NULL "
                . "ORDER BY i.dateIssued DESC")
            ->setParameter('user', $user);

        //add offset if requested
        if (!is_null($offset)) {
            $instances->setFirstResult($offset);
        }
        //add limit if requested
        if (!is_null($limit)) {
            $instances->setMaxResults($limit);
        }

        //query DB
        $instances = $instances->getResult();

        if (null === $instances) {
            $message = sprintf(
                'Unable to find any notifications for User %d',
                $user->getId()
            );
            throw new Exception($message);
        }
        return $instances;
    }

    /**
     * Get the count of unread notifications for a user
     *
     * @param $user
     * @return mixed
     */
    public function getUnreadCountByUser($user)
    {
        $count = $this->getEntityManager('edcoms_cms')
            ->createQuery("SELECT COUNT(i) "
                . "FROM EdcomsCMSContentBundle:NotificationInstance i "
                . "WHERE i.user = :user "
                . "AND i.dateSeen IS NULL ")
            ->setParameter('user', $user)
            ->getSingleScalarResult();

        return $count;
    }

}
